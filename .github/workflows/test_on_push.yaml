name: Run tests

on:
  push:
  pull_request:

jobs:
  run-tests-ce:
    if: |
      github.event_name == 'push' ||
      github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository
    strategy:
      matrix:
        # We need 1.10.6 here to check that module works with
        # old Tarantool versions that don't have "tuple-keydef"/"tuple-merger" support.
        tarantool-version: ["1.10.6", "1.10", "2.2", "2.3", "2.4", "2.5", "2.6", "2.7", "2.8", "2.10"]
        metrics-version: [""]
        remove-merger: [false]
        include:
          - tarantool-version: "1.10"
            metrics-version: "0.12.0"
          - tarantool-version: "2.7"
            remove-merger: true
          - tarantool-version: "2.8"
            metrics-version: "0.1.8"
          - tarantool-version: "2.8"
            metrics-version: "0.10.0"
          - tarantool-version: "2.10"
            coveralls: true
            metrics-version: "0.12.0"
      fail-fast: false
    # Can't install older versions on 22.04,
    # see https://github.com/tarantool/setup-tarantool/issues/36
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@master

      - name: Setup Tarantool CE
        uses: tarantool/setup-tarantool@v2
        with:
          tarantool-version: ${{ matrix.tarantool-version }}

      - name: Fix luarocks in Tarantool CE 1.10.6
        if: matrix.tarantool-version == '1.10.6'
        run: |
          sudo patch -p1 /usr/share/tarantool/luarocks/manif.lua luarocks.patch

      - name: Install requirements for community
        run: |
          tarantool --version
          ./deps.sh

      - name: Install metrics
        if: matrix.metrics-version != ''
        run: tarantoolctl rocks install metrics ${{ matrix.metrics-version }}

      - name: Remove external merger if needed
        if: ${{ matrix.remove-merger }}
        run: rm .rocks/lib/tarantool/tuple/merger.so

      # This server starts and listen on 8084 port that is used for tests
      - name: Stop Mono server
        run: sudo kill -9 $(sudo lsof -t -i tcp:8084) || true

      - run: cmake -S . -B build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run tests and code coverage analysis
        run: make -C build coverage

      - name: Send code coverage to coveralls.io
        run: make -C build coveralls
        if: ${{ matrix.coveralls }}

  run-perf-tests-ce:
    if: |
      github.event_name == 'push' ||
      github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository
    strategy:
      matrix:
        tarantool-version: ["1.10", "2.10"]
        metrics-version: ["0.12.0"]
      fail-fast: false
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@master

      - name: Setup Tarantool CE
        uses: tarantool/setup-tarantool@v2
        with:
          tarantool-version: ${{ matrix.tarantool-version }}

      - name: Install requirements for community
        run: |
          tarantool --version
          ./deps.sh

      - name: Install metrics
        run: tarantoolctl rocks install metrics ${{ matrix.metrics-version }}

      # This server starts and listen on 8084 port that is used for tests
      - name: Stop Mono server
        run: sudo kill -9 $(sudo lsof -t -i tcp:8084) || true

      - run: cmake -S . -B build

      - name: Run performance tests
        run: make -C build performance

  run-tests-ee:
    if: github.event_name == 'push'
    strategy:
      matrix:
        tarantool-version:
          - folder: "1.10"
            bundle: "tarantool-enterprise-sdk-1.10.13-48-r523"
          - folder: "2.10"
            bundle: "tarantool-enterprise-sdk-nogc64-2.10.4-0-r523.linux.x86_64"
        metrics-version: ["", "0.12.0"]
      fail-fast: false
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@master

      - name: Install requirements for enterprise
        run: |
          curl -O -L https://tarantool:${{ secrets.DOWNLOAD_TOKEN }}@download.tarantool.io/enterprise/release/linux/x86_64/${{ matrix.tarantool-version.folder }}/${{ matrix.tarantool-version.bundle }}.tar.gz
          tar -xzf ${{ matrix.tarantool-version.bundle }}.tar.gz
          rm -f ${{ matrix.tarantool-version.bundle }}.tar.gz
          sudo cp tarantool-enterprise/tarantool /usr/bin/tarantool
          source tarantool-enterprise/env.sh
          tarantool --version
          ./deps.sh

      - name: Install metrics
        if: matrix.metrics-version != ''
        run: |
          source tarantool-enterprise/env.sh
          tarantoolctl rocks install metrics ${{ matrix.metrics-version }}

      # This server starts and listen on 8084 port that is used for tests
      - name: Stop Mono server
        run: sudo kill -9 $(sudo lsof -t -i tcp:8084) || true

      - run: cmake -S . -B build

      - name: Run tests and code coverage analysis
        run: make -C build coverage
