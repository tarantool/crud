name: Run tests

on:
  push:
  pull_request:

jobs:
  run-tests-ce:
    if: |
      github.event_name == 'push' ||
      github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository
    strategy:
      fail-fast: false
      matrix:
        include:
          - tarantool-version: "2.10"
          - tarantool-version: "2.11"
            coveralls: true
          - tarantool-version: "2.11"
            external-tuple-merger-version: "0.0.5"
            external-tuple-keydef-version: "0.0.4"
          - tarantool-version: "3.0"
          - tarantool-version: "3.1"
          - tarantool-version: "3.2"
          - tarantool-version: "3.3"
          - tarantool-version: "master"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup Tarantool CE (1.x, 2.x)
        if: ${{ startsWith( matrix.tarantool-version, '1.' ) || startsWith( matrix.tarantool-version, '2.' ) }}
        uses: tarantool/setup-tarantool@v4
        with:
          tarantool-version: ${{ matrix.tarantool-version }}

      - name: Setup tt
        run: |
          curl -L https://tarantool.io/release/2/installer.sh | sudo bash
          sudo apt install -y tt
          tt version

      - name: Cache Tarantool 3.x
        if: ${{ startsWith( matrix.tarantool-version, '3.' ) }}
        id: cache-v3
        uses: actions/cache@v4
        with:
          path: "${GITHUB_WORKSPACE}/bin"
          key: cache-${{ matrix.tarantool-version }}

      - name: Setup Tarantool CE (3.x)
        if: ${{ startsWith( matrix.tarantool-version, '3.' ) && steps.cache-latest.outputs.cache-hit != 'true' }}
        run: |
          tt init
          tt install tarantool ${{ matrix.tarantool-version }}

      - name: Get Tarantool master latest commit
        if: matrix.tarantool-version == 'master'
        run: |
          commit_hash=$(git ls-remote https://github.com/tarantool/tarantool.git --branch master | head -c 8)
          echo "LATEST_COMMIT=${commit_hash}" >> $GITHUB_ENV
        shell: bash

      - name: Cache Tarantool master
        if: matrix.tarantool-version == 'master'
        id: cache-latest
        uses: actions/cache@v4
        with:
          path: "${GITHUB_WORKSPACE}/bin"
          key: cache-latest-${{ env.LATEST_COMMIT }}

      - name: Setup Tarantool CE (master)
        if: matrix.tarantool-version == 'master' && steps.cache-latest.outputs.cache-hit != 'true'
        run: |
          tt init
          tt install tarantool master

      - name: Add tt Tarantool to PATH
        if: ${{ startsWith( matrix.tarantool-version, '3.' ) || matrix.tarantool-version == 'master' }}
        run: echo "${GITHUB_WORKSPACE}/bin" >> $GITHUB_PATH

      - name: Install requirements for community
        run: |
          tarantool --version
          ./deps.sh

      - name: Install metrics
        if: matrix.metrics-version != ''
        run: tt rocks install metrics ${{ matrix.metrics-version }}

      - name: Install external tuple-merger
        if: matrix.external-tuple-merger-version != ''
        run: tt rocks install tuple-merger ${{ matrix.external-tuple-merger-version }}

      - name: Install external tuple-keydef
        if: matrix.external-tuple-keydef-version != ''
        run: tt rocks install tuple-keydef ${{ matrix.external-tuple-keydef-version }}

      # This server starts and listen on 8084 port that is used for tests
      - name: Stop Mono server
        run: sudo kill -9 $(sudo lsof -t -i tcp:8084) || true

      - run: cmake -S . -B build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run tests
        if: matrix.coveralls != true # See https://github.com/actions/runner/issues/1173
        uses: nick-fields/retry@v3
        with:
          max_attempts: 3
          retry_on: error
          retry_wait_seconds: 10
          timeout_minutes: 40
          command: |
            make -C build luatest-no-coverage

      - name: Run tests with coverage and send results to coveralls.io
        if: ${{ matrix.coveralls }}
        uses: nick-fields/retry@v3
        with:
          max_attempts: 3
          retry_on: error
          retry_wait_seconds: 10
          timeout_minutes: 40
          command: |
            make -C build coveralls

  run-tests-ee:
    if: github.event_name == 'push'
    strategy:
      fail-fast: false
      matrix:
        include:
          - tarantool-version:
              folder: "2.10"
              bundle: "tarantool-enterprise-sdk-gc64-2.10.8-0-r691.linux.x86_64"
          - tarantool-version:
              folder: "2.11"
              bundle: "tarantool-enterprise-sdk-gc64-2.11.7-0-r691.linux.x86_64"
          - tarantool-version:
              folder: "3.2"
              bundle: "tarantool-enterprise-sdk-gc64-3.2.0-0-r40.linux.x86_64"
          - tarantool-version:
              folder: "3.3"
              bundle: "tarantool-enterprise-sdk-gc64-3.3.2-0-r62.linux.x86_64"
          - tarantool-version:
              folder: "3.4"
              bundle: "tarantool-enterprise-sdk-gc64-3.4.0-0-r62.linux.x86_64"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Install requirements for enterprise
        run: |
          curl -O -L https://tarantool:${{ secrets.DOWNLOAD_TOKEN }}@download.tarantool.io/enterprise/release/linux/x86_64/${{ matrix.tarantool-version.folder }}/${{ matrix.tarantool-version.bundle }}.tar.gz
          tar -xzf ${{ matrix.tarantool-version.bundle }}.tar.gz
          rm -f ${{ matrix.tarantool-version.bundle }}.tar.gz
          sudo cp tarantool-enterprise/tarantool /usr/bin/tarantool
          source tarantool-enterprise/env.sh
          tarantool --version
          ./deps.sh

      - name: Install metrics
        if: matrix.metrics-version != ''
        run: |
          source tarantool-enterprise/env.sh
          tt init
          tt rocks install metrics ${{ matrix.metrics-version }}

      # This server starts and listen on 8084 port that is used for tests
      - name: Stop Mono server
        run: sudo kill -9 $(sudo lsof -t -i tcp:8084) || true

      - run: cmake -S . -B build

      - name: Run tests
        uses: nick-fields/retry@v3
        with:
          max_attempts: 3
          retry_on: error
          retry_wait_seconds: 10
          timeout_minutes: 40
          command: |
            make -C build luatest-no-coverage

  run-perf-tests-ce:
    if: |
      github.event_name == 'push' ||
      github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository
    strategy:
      fail-fast: false
      matrix:
        tarantool-version: [ "2.10", "2.11", "3.0", "3.1", "3.2", "3.3", "master" ]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup Tarantool CE (1.x, 2.x)
        if: ${{ startsWith( matrix.tarantool-version, '1.' ) || startsWith( matrix.tarantool-version, '2.' ) }}
        uses: tarantool/setup-tarantool@v4
        with:
          tarantool-version: ${{ matrix.tarantool-version }}

      - name: Setup tt
        run: |
          curl -L https://tarantool.io/release/2/installer.sh | sudo bash
          sudo apt install -y tt
          tt version

      - name: Cache Tarantool 3.x
        if: ${{ startsWith( matrix.tarantool-version, '3.' ) }}
        id: cache-v3
        uses: actions/cache@v4
        with:
          path: "${GITHUB_WORKSPACE}/bin"
          key: cache-${{ matrix.tarantool-version }}

      - name: Setup Tarantool CE (3.x)
        if: ${{ startsWith( matrix.tarantool-version, '3.' ) && steps.cache-latest.outputs.cache-hit != 'true' }}
        run: |
          tt init
          tt install tarantool ${{ matrix.tarantool-version }}

      - name: Get Tarantool master latest commit
        if: matrix.tarantool-version == 'master'
        run: |
          commit_hash=$(git ls-remote https://github.com/tarantool/tarantool.git --branch master | head -c 8)
          echo "LATEST_COMMIT=${commit_hash}" >> $GITHUB_ENV
        shell: bash

      - name: Cache Tarantool master
        if: matrix.tarantool-version == 'master'
        id: cache-latest
        uses: actions/cache@v4
        with:
          path: "${GITHUB_WORKSPACE}/bin"
          key: cache-latest-${{ env.LATEST_COMMIT }}

      - name: Setup Tarantool CE (master)
        if: matrix.tarantool-version == 'master' && steps.cache-latest.outputs.cache-hit != 'true'
        run: |
          tt init
          tt install tarantool master

      - name: Add tt Tarantool to PATH
        if: ${{ startsWith( matrix.tarantool-version, '3.' ) || matrix.tarantool-version == 'master' }}
        run: echo "${GITHUB_WORKSPACE}/bin" >> $GITHUB_PATH

      - name: Install requirements for community
        run: |
          tarantool --version
          ./deps.sh

      - name: Install metrics
        if: matrix.metrics-version != ''
        run: tt rocks install metrics ${{ matrix.metrics-version }}

      # This server starts and listen on 8084 port that is used for tests
      - name: Stop Mono server
        run: sudo kill -9 $(sudo lsof -t -i tcp:8084) || true

      - run: cmake -S . -B build

      - name: Run performance tests
        uses: nick-fields/retry@v3
        with:
          max_attempts: 3
          retry_on: error
          retry_wait_seconds: 10
          timeout_minutes: 60
          command: |
            make -C build performance
